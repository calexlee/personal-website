{"version":3,"sources":["content/L-Membrane_RGB_R.png","content/SoC.PNG","content/G4CSync.PNG","content/codenames.PNG","Home.js","Experience.js","Projects.js","Contact.js","App.js","serviceWorker.js","index.js","content/SunGlasses.png","content/cornell_seal_simple_black.svg"],"names":["module","exports","Home","className","src","require","alt","height","Experience","href","YoutubeOutlined","style","fontSize","Meta","Card","Projects","gutter","align","span","width","cover","actions","GithubOutlined","key","title","description","ChromeOutlined","Contact","MailOutlined","color","LinkedinOutlined","Header","Layout","Footer","Content","App","content","useState","loc","setLoc","iconStyle","onClick","e","console","log","selectedKeys","mode","theme","Item","icon","HomeOutlined","ClockCircleOutlined","ProjectOutlined","ContactsOutlined","LinkedinFilled","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3df6624c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/L-Membrane_RGB_R.b348feba.png\";","module.exports = __webpack_public_path__ + \"static/media/SoC.d9c50c00.PNG\";","module.exports = __webpack_public_path__ + \"static/media/G4CSync.bbccfe56.PNG\";","module.exports = __webpack_public_path__ + \"static/media/codenames.7409ee05.PNG\";","import React from 'react';\r\nimport './Content.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div className = \"nameTitle\">\r\n            <h2 className = \"homeTitle\">Clifford <span className = \"nick\">Alex</span>ander Lee</h2>\r\n            <hr className=\"hTitle\"/>\r\n            <img className = \"animated hidSun\" src = {require('./content/SunGlasses.png')} alt = \"Sunglasses\" height = \"100\"/>\r\n            </div>\r\n\r\n            <div className = \"Cornell Line\">\r\n            <h2 className = \"CS\">Computer Science Student @ <span className = \"animated Cornell\">Cornell</span></h2>\r\n            <img className = \"animated hidCorn\" src = {require('./content/cornell_seal_simple_black.svg')} alt = \"Cornell Logo\" height = \"100\"/>\r\n            </div>\r\n\r\n            <div className = \"MathWorksLine\">\r\n            <h2 className = \"SA\"><span className = \"animated MATLAB\">MATLAB</span> Student Ambassador</h2>\r\n            <img className = \"animated hidMAT\" src = {require('./content/L-Membrane_RGB_R.png')} alt = \"MathWorks L-shaped Membrane\" height = \"100\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Content.css';\r\nimport { YoutubeOutlined } from '@ant-design/icons'\r\n\r\nconst Experience = () => {\r\n    return (\r\n        <div className=\"experience\">\r\n            <h1>Current Jobs</h1>\r\n            <div className=\"jobTitle\">\r\n                <h2 className=\"floatLeft\">MATLAB Student Ambassador</h2>\r\n                <h3>Started September 2019</h3>\r\n            </div>\r\n            <hr className=\"bTitle\"/>\r\n            <p className=\"jobInfo\">\r\n                Working for Mathworks as the sole student ambassador for Cornell University. Responsibilities include planning and \r\n                holding educational events for undergraduate and graduate students using MATLAB and Simulink; use social media to spread\r\n                relevant educational information; and produce educational videos for the official Mathworks Youtube (my first video can\r\n                be found via the link below).\r\n            </p>\r\n            <a href=\"https://youtu.be/4MRXkC7HjzY\">\r\n            <YoutubeOutlined style = {{fontSize: \"64px\"}}/>\r\n            </a>\r\n            <div className=\"jobTitle\">\r\n                <h2 className=\"floatLeft\">CS Consultant for CS 1112 & CS 1132</h2>\r\n                <h3>Started January 2019</h3>\r\n            </div>\r\n            <hr className=\"bTitle\"/>\r\n            <p className=\"jobInfo\">\r\n                Working as a teaching assistant for Introduction to Computing using MATLAB. Responsibilities include holding office\r\n                hours and one-on-one sessions with students to help them with assignments/concepts from the class; assisting in \r\n                discussion/lab sessions; and performing grading on various assignments and exams.\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Experience;","import React from 'react';\r\nimport './Content.css';\r\nimport { Card, Col, Row } from 'antd';\r\nimport { GithubOutlined, ChromeOutlined } from '@ant-design/icons';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <div className=\"projects\">\r\n            <h1>Projects</h1>\r\n            <Row gutter={16} align=\"middle\">\r\n                <Col span={8}>\r\n                    <Card\r\n                        style= {{ width: 400 }}\r\n                        cover={\r\n                            <img\r\n                                alt = \"Settlers of Catan\"\r\n                                src = {require('./content/SoC.PNG')}\r\n                                height=\"200\"\r\n                            />\r\n                        }\r\n                        actions = {[\r\n                            <a href = \"https://github.com/calexlee/settlers-of-catan\">\r\n                            <GithubOutlined key=\"SoC\" style = {{fontSize: '36px'}} />\r\n                            </a>,\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Settlers of Catan\"\r\n                            description=\"A fully implemented Settlers of Catan board game within the Ubuntu terminal\"\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card\r\n                        style= {{ width: 400 }}\r\n                        cover={\r\n                            <img\r\n                                alt = \"Grading4Canvas\"\r\n                                src = {require('./content/G4CSync.PNG')}\r\n                                height=\"200\"\r\n                            />\r\n                        }\r\n                        actions = {[\r\n                            <p> To be deployed fall 2020 </p>,\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Grading for Canvas\"\r\n                            description=\"A web application interfacing with Cornell's Canvas to provide better grading methods for professors\"\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Card\r\n                        style= {{ width: 400 }}\r\n                        cover={\r\n                            <img\r\n                                alt = \"CodeNamesPlus\"\r\n                                src = {require('./content/codenames.PNG')}\r\n                                height=\"200\"\r\n                            />\r\n                        }\r\n                        actions = {[\r\n                            <a href = \"https://codenames-plus.web.app/\">\r\n                            <ChromeOutlined key=\"codenames\" style = {{fontSize: '36px'}} />\r\n                            </a>,\r\n                        ]}\r\n                    >\r\n                        <Meta\r\n                            title=\"Codenames Plus\"\r\n                            description=\"An implementation of Codenames with realtime streaming on the web\"\r\n                        />\r\n                    </Card>\r\n                </Col>\r\n        \r\n            </Row>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { LinkedinOutlined, GithubOutlined, MailOutlined } from '@ant-design/icons';\r\nimport './Content.css';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <h1>Contact Me</h1>\r\n            <div className = \"me\"></div>\r\n            <p className=\"contactInfo\">I currently live in Hopedale, Massachusetts and go to Cornell University in Ithaca, New York. The most reliable method\r\n                of contact via my email, but LinkedIn works as well. Feel free to check out my Github and  \r\n                thank you for taking the time to visit my site!\r\n            </p>\r\n            <a href=\"mailto:cal368@cornell.edu\">\r\n                <MailOutlined className = \"contentIcon\" style = {{fontSize: '128px', color: 'white'}}/>\r\n            </a>\r\n            <a href = \"https://www.linkedin.com/in/clifford-lee-cornell/\">\r\n                <LinkedinOutlined className = \"contentIcon\" style = {{fontSize: '128px', color: 'white'}}/>\r\n            </a>\r\n            <a href = \"https://github.com/calexlee\">\r\n                <GithubOutlined className = \"contentIcon\" style = {{fontSize: '128px', color: 'white'}}/>\r\n            </a>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React, { useState }  from 'react';\r\nimport './App.less';\r\nimport './Content.css'\r\nimport { Layout, Menu } from 'antd';\r\nimport { HomeOutlined, ProjectOutlined, ContactsOutlined, ClockCircleOutlined, LinkedinFilled } from '@ant-design/icons';\r\nimport Home from './Home.js'\r\nimport Experience from './Experience.js'\r\nimport Projects from './Projects.js'\r\nimport Contact from './Contact.js'\r\n\r\nconst {Header, Footer, Content } = Layout;\r\n\r\nconst App = () => {\r\n  const [loc, setLoc] = useState(\"home\");\r\n  const handleClick = e => {\r\n    console.log('clicked ', e.key);\r\n    setLoc(e.key);\r\n  }\r\n\r\n  const iconStyle = {\r\n    fontSize: '18px',\r\n  }\r\n  let content;\r\n  if (loc === \"home\"){\r\n    content = <Home/>;\r\n  } else if (loc === \"experience\"){\r\n    content = <Experience/>;\r\n  } else if (loc === \"projects\"){\r\n    content = <Projects/>;\r\n  } else if (loc === \"contact\"){\r\n    content = <Contact/>;\r\n  } else {\r\n    content = <div> content not displaying properly</div>;\r\n  }\r\n\r\n  return (\r\n  <div className=\"App\">\r\n    <Layout style={{height:\"100vh\"}}> \r\n      <Header> \r\n        <Menu className = \"topNav\" onClick={handleClick} selectedKeys={[loc]} mode = \"horizontal\" theme = \"light\">\r\n        <Menu.Item key = \"home\" icon = {<HomeOutlined style = {iconStyle}/>}>\r\n          Home  \r\n        </Menu.Item>\r\n        <Menu.Item key = \"experience\" icon = {<ClockCircleOutlined style = {iconStyle}/>}>\r\n          Experience\r\n        </Menu.Item>\r\n        <Menu.Item key = \"projects\" icon = {<ProjectOutlined style = {iconStyle}/>}>\r\n          Projects\r\n        </Menu.Item>\r\n        <Menu.Item key = \"contact\" icon = {<ContactsOutlined style = {iconStyle}/>}>\r\n          Contact\r\n        </Menu.Item>\r\n        </Menu>  \r\n      </Header>\r\n      <Content className = {loc}> \r\n        {content}\r\n      </Content>\r\n      <Footer>\r\n        Created by Clifford Alexander Lee\r\n        <a href = \"https://www.linkedin.com/in/clifford-lee-cornell/\">\r\n        <LinkedinFilled className = \"footIcon\" style = {{fontSize: '24px'}}/>  \r\n        </a>\r\n      </Footer>\r\n    </Layout>\r\n  </div>\r\n)};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/SunGlasses.c4812280.png\";","module.exports = __webpack_public_path__ + \"static/media/cornell_seal_simple_black.2d0fb224.svg\";"],"sourceRoot":""}